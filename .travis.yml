language: minimal

# Don't build the commits to the autoupdate- branches that the dependency
# autoupdater creates. These builds are redundant with the PR builds.
branches:
  except:
    - /^autoupdate-/

env:
  global:
    # directory where ICU is installed on host
    - ICUDIR="$TRAVIS_BUILD_DIR/thirdparty/icu"

# common configuration for all jobs in build stage
_build: &build
  before_install: . travis/dependencies.sh

# common configuration for manylinux builds
_manylinux_build: &manylinux_build
  os: linux
  dist: focal
  services: docker
  env:
    # Docker run command with arguments common to all manylinux builds
    - DOCKER_RUN="docker run --rm -e CCACHE_DIR=/ccache -e PIP_CACHE_DIR=/pipcache -e CCACHE_MAXSIZE=350M -e ICU_URL -e CYTHON_VERSION -v $HOME/ccache:/ccache -v $HOME/pipcache:/pipcache -v $TRAVIS_BUILD_DIR:/iknow"
  cache:
    branch: paths-relative
    directories:
      - $ICUDIR
      - $HOME/ccache
      - $HOME/pipcache  # pip cache for container
      - $HOME/.cache/pip  # pip cache for host

jobs:
  include:
    - stage: build
      <<: *build
      <<: *manylinux_build
      name: manylinux2014_aarch64
      arch: arm64-graviton2
      virt: lxd
      group: edge
      workspaces:
        create:
          name: wheels-manylinux2014_aarch64
          paths: modules/iknowpy/wheelhouse
      script: $DOCKER_RUN quay.io/pypa/manylinux2014_aarch64:$MANYLINUX2014_AARCH64_TAG /iknow/travis/build_manylinux.sh
    - <<: *build
      <<: *manylinux_build
      name: manylinux2014_ppc64le
      arch: ppc64le
      workspaces:
        create:
          name: wheels-manylinux2014_ppc64le
          paths: modules/iknowpy/wheelhouse
      script: $DOCKER_RUN quay.io/pypa/manylinux2014_ppc64le:$MANYLINUX2014_PPC64LE_TAG /iknow/travis/build_manylinux.sh
    - <<: *build
      <<: *manylinux_build
      name: manylinux2010_x86_64
      arch: amd64
      workspaces:
        create:
          name: wheels-manylinux2010_x86_64
          paths: modules/iknowpy/wheelhouse
      script: $DOCKER_RUN quay.io/pypa/manylinux2010_x86_64:$MANYLINUX2010_X86_64_TAG /iknow/travis/build_manylinux.sh
    - <<: *build
      name: Mac OS X 10.9 x86_64
      os: osx
      osx_image: xcode12.2
      env: >-
        HOMEBREW_NO_AUTO_UPDATE=1
        MACOSX_DEPLOYMENT_TARGET=10.9
        PATH="/usr/local/opt/ccache/libexec:$PATH"
        CCACHE_DIR="$HOME/ccache"
        CCACHE_MAXSIZE=400M
        PIP_CACHE_DIR="$HOME/pipcache"
        PYINSTALL_DIR="$HOME/.pyenv/versions"
      cache:
        branch: paths-relative
        directories:
          - $ICUDIR
          - $CCACHE_DIR
          - $PIP_CACHE_DIR
          - $PYINSTALL_DIR
      workspaces:
        create:
          name: wheels-osx
          paths: modules/iknowpy/dist/merged
      before_install: . travis/dependencies.sh
      install:
        - eval "$(pyenv init -)"
        - travis/install_osx.sh
      script: travis/build_osx.sh
    - <<: *build
      name: Windows x86_64
      os: windows
      env: >-
        BUILDCACHE_EXE_DIR="$HOME/buildcache_exe"
        BUILDCACHE_DIR="$HOME/buildcache"
        BUILDCACHE_MAX_CACHE_SIZE=2147483648
        PIP_CACHE_DIR="$HOME/pipcache"
        PYINSTALL_DIR="$HOME/python"
      cache:
        directories:
          - $ICUDIR
          - $BUILDCACHE_EXE_DIR
          - $BUILDCACHE_DIR
          - $PIP_CACHE_DIR
          - $PYINSTALL_DIR
      workspaces:
        create:
          name: wheels-windows
          paths: modules/iknowpy/dist/merged
      before_install: . travis/dependencies.sh
      install: travis/install_windows.sh
      script: travis/build_windows.sh

    - stage: deploy
      name: deploy to PyPI if appropriate
      if: >-
        branch = master AND
        type IN (push, api) AND
        env(PYPI_TOKEN) IS present AND
        env(TESTPYPI_TOKEN) IS present
      os: linux
      dist: focal
      arch: amd64
      cache:
        directories: $HOME/.cache/pip
      workspaces:
        use:
          - wheels-manylinux2014_aarch64
          - wheels-manylinux2014_ppc64le
          - wheels-manylinux2010_x86_64
          - wheels-osx
          - wheels-windows
      script: travis/deploy.sh
